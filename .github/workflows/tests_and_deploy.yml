name: FastAPI CI - Tests and Push on DockerHub

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests_and_deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
        env:
          discovery.type: single-node
          cluster.name: docker-cluster
          network.host: 0.0.0.0
          xpack.security.enabled: false
          xpack.monitoring.collection.enabled: true
          indices.query.bool.max_clause_count: 100000
          ES_JAVA_OPTS: -Xmx4096m -Xms1024m
        ports:
          - 9200:9200
        options: --health-cmd "curl http://localhost:9200/_cluster/health" --health-interval 10s --health-timeout 5s --health-retries 10

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.5

      - name: Install Dependencies For Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env.test

      - name: Generate coverage report
        env:
          ENV_FILE: .env.test
        run: |
          coverage run
          coverage json

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./

      - name: SignIn DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_REPOSITORY }}:latest
